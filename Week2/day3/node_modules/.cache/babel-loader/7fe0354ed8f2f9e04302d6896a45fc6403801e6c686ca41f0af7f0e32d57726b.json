{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\AeroAspire\\\\Week2\\\\day3\\\\src\\\\components\\\\TaskCard.js\";\nimport React from \"react\";\nimport { Card, CardContent, Typography, Button, Stack } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskCard({\n  task,\n  toggleTask,\n  deleteTask\n}) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      backgroundColor: task.completed ? \"#d7ffd9\" : \"#fff\",\n      borderLeft: task.completed ? \"6px solid green\" : \"6px solid gray\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            textDecoration: task.completed ? \"line-through\" : \"none\"\n          },\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: task.completed ? \"warning\" : \"success\",\n            onClick: () => toggleTask(task.id),\n            children: task.completed ? \"Undo\" : \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: () => deleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Button","Stack","jsxDEV","_jsxDEV","TaskCard","task","toggleTask","deleteTask","style","backgroundColor","completed","borderLeft","children","direction","alignItems","justifyContent","variant","textDecoration","name","fileName","_jsxFileName","lineNumber","columnNumber","spacing","color","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/AeroAspire/Week2/day3/src/components/TaskCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography, Button, Stack } from \"@mui/material\";\r\n\r\nfunction TaskCard({ task, toggleTask, deleteTask }) {\r\n  return (\r\n    <Card\r\n      style={{\r\n        backgroundColor: task.completed ? \"#d7ffd9\" : \"#fff\",\r\n        borderLeft: task.completed ? \"6px solid green\" : \"6px solid gray\",\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Typography\r\n            variant=\"h6\"\r\n            style={{\r\n              textDecoration: task.completed ? \"line-through\" : \"none\",\r\n            }}\r\n          >\r\n            {task.name}\r\n          </Typography>\r\n\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color={task.completed ? \"warning\" : \"success\"}\r\n              onClick={() => toggleTask(task.id)}\r\n            >\r\n              {task.completed ? \"Undo\" : \"Complete\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              onClick={() => deleteTask(task.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAW,CAAC,EAAE;EAClD,oBACEJ,OAAA,CAACN,IAAI;IACHW,KAAK,EAAE;MACLC,eAAe,EAAEJ,IAAI,CAACK,SAAS,GAAG,SAAS,GAAG,MAAM;MACpDC,UAAU,EAAEN,IAAI,CAACK,SAAS,GAAG,iBAAiB,GAAG;IACnD,CAAE;IAAAE,QAAA,eAEFT,OAAA,CAACL,WAAW;MAAAc,QAAA,eACVT,OAAA,CAACF,KAAK;QACJY,SAAS,EAAC,KAAK;QACfC,UAAU,EAAC,QAAQ;QACnBC,cAAc,EAAC,eAAe;QAAAH,QAAA,gBAE9BT,OAAA,CAACJ,UAAU;UACTiB,OAAO,EAAC,IAAI;UACZR,KAAK,EAAE;YACLS,cAAc,EAAEZ,IAAI,CAACK,SAAS,GAAG,cAAc,GAAG;UACpD,CAAE;UAAAE,QAAA,EAEDP,IAAI,CAACa;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAEbnB,OAAA,CAACF,KAAK;UAACY,SAAS,EAAC,KAAK;UAACU,OAAO,EAAE,CAAE;UAAAX,QAAA,gBAChCT,OAAA,CAACH,MAAM;YACLgB,OAAO,EAAC,UAAU;YAClBQ,KAAK,EAAEnB,IAAI,CAACK,SAAS,GAAG,SAAS,GAAG,SAAU;YAC9Ce,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACD,IAAI,CAACqB,EAAE,CAAE;YAAAd,QAAA,EAElCP,IAAI,CAACK,SAAS,GAAG,MAAM,GAAG;UAAU;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,eACTnB,OAAA,CAACH,MAAM;YACLgB,OAAO,EAAC,UAAU;YAClBQ,KAAK,EAAC,OAAO;YACbC,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACF,IAAI,CAACqB,EAAE,CAAE;YAAAd,QAAA,EACpC;UAED;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX;AAACK,EAAA,GA3CQvB,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}